version: "3.5"

services:
  pg:
    image: postgres:latest
    container_name: pg
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 5432

  fastapi_scraper:
    container_name: fastapi_scraper
    build:
      context: .
      dockerfile: ./src/backend/docker/Dockerfile.fastapi_scraper
    depends_on:
      - pg
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=pg
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 8000
  
  fastapi_oauth:
    container_name: fastapi_oauth
    build:
      context: .
      dockerfile: ./src/backend/docker/Dockerfile.fastapi_oauth
    depends_on:
      - pg
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=pg
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_DB=${DB_NAME}
      - GITHUB_CLINET_ID=${GITHUB_CLINET_ID}
      - GITHUB_CLINET_SECRET=${GITHUB_CLINET_SECRET}
    expose:
      - 8800

  nodejs:
    container_name: nodejs
    build:
      context: .
      dockerfile: ./src/frontend/docker/Dockerfile.nodejs
    depends_on:
      - nginx
    restart: always
    expose:
      - 8080

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./src/rabbitmq:/var/lib/rabbitmq
    expose:
      - 15672
      - 5672

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./src/backend/docker/Dockerfile.nginx
    restart: always
    depends_on:
      - fastapi_scraper
      - fastapi_oauth
    ports:
      - "80:80"

    